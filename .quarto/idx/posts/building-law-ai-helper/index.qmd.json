{"title":"Building a Legal AI Helper: My Senior Project Overview","markdown":{"yaml":{"title":"Building a Legal AI Helper: My Senior Project Overview","description":"Introducing my senior project, Law AI Helper — an AI assistant for labor law information using RAG and LLMs.","author":"Shawn","date":"2025-10-04","categories":["project","overview"]},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\nAccessing accurate and up-to-date legal information can be challenging for ordinary people, especially when it comes to labor laws. My senior project, **Law AI Helper**, aims to make legal knowledge more accessible by building an intelligent assistant that can understand and summarize labor law documents.\n\nThe project integrates **Retrieval-Augmented Generation (RAG)** and **Large Language Models (LLMs)** to answer legal questions using official legal documents as references.\n\n---\n\n## Motivation\n\nMany people struggle to understand legal language or find the right information about their workplace rights. Even when legal documents are available online, they are often written in complex terms that are hard to interpret.\n\nAs a data science student, I wanted to bridge this gap — using AI not to replace lawyers, but to assist users in understanding labor laws clearly and quickly.\n\n---\n\n## System Overview\n\nThe **Law AI Helper** consists of three main parts:\n\n- **Document Retrieval (RAG)** – The system reads and indexes labor law documents using vector embeddings.\n- **API Integration** – The backend connects to an LLM API (like OpenAI or Gemini) for natural language responses.\n- **User Query Interface** – Users can ask legal questions in plain language, and the system retrieves relevant sections before generating a summarized, accurate response.\n\nFor example, if a user asks:\n\n> “Can my employer fire me without notice?”\n\nThe system searches its indexed documents for related clauses about “termination” or “dismissal,” then summarizes the relevant labor law passages before answering.\n\n---\n\n## Tools and Technologies\n\n- **Python** (LangChain, OpenAI API)  \n- **Vector Database** (Chroma / Pinecone)  \n- **Frontend** (Next.js, Tailwind CSS)  \n- **Legal Data Source:** Government labor law documents and policy summaries  \n\n---\n\n## Insights\n\nWorking with RAG has helped me understand how LLMs can go beyond their training data by connecting them to real, verified information sources. It’s a powerful way to build trustworthy AI — especially for legal or sensitive use cases where hallucinations can be dangerous.\n\n---\n\n## Next Steps\n\nIn the next phase, I’ll focus on:\n\n- Improving document retrieval accuracy  \n- Testing with different LLMs (GPT-4, Claude, Gemini)  \n- Adding citation tracking for better transparency  \n\nThis project has already taught me that combining **data science**, **natural language processing**, and **law** can create meaningful tools that help people in real life.\n","srcMarkdownNoYaml":"\n\n## Introduction\n\nAccessing accurate and up-to-date legal information can be challenging for ordinary people, especially when it comes to labor laws. My senior project, **Law AI Helper**, aims to make legal knowledge more accessible by building an intelligent assistant that can understand and summarize labor law documents.\n\nThe project integrates **Retrieval-Augmented Generation (RAG)** and **Large Language Models (LLMs)** to answer legal questions using official legal documents as references.\n\n---\n\n## Motivation\n\nMany people struggle to understand legal language or find the right information about their workplace rights. Even when legal documents are available online, they are often written in complex terms that are hard to interpret.\n\nAs a data science student, I wanted to bridge this gap — using AI not to replace lawyers, but to assist users in understanding labor laws clearly and quickly.\n\n---\n\n## System Overview\n\nThe **Law AI Helper** consists of three main parts:\n\n- **Document Retrieval (RAG)** – The system reads and indexes labor law documents using vector embeddings.\n- **API Integration** – The backend connects to an LLM API (like OpenAI or Gemini) for natural language responses.\n- **User Query Interface** – Users can ask legal questions in plain language, and the system retrieves relevant sections before generating a summarized, accurate response.\n\nFor example, if a user asks:\n\n> “Can my employer fire me without notice?”\n\nThe system searches its indexed documents for related clauses about “termination” or “dismissal,” then summarizes the relevant labor law passages before answering.\n\n---\n\n## Tools and Technologies\n\n- **Python** (LangChain, OpenAI API)  \n- **Vector Database** (Chroma / Pinecone)  \n- **Frontend** (Next.js, Tailwind CSS)  \n- **Legal Data Source:** Government labor law documents and policy summaries  \n\n---\n\n## Insights\n\nWorking with RAG has helped me understand how LLMs can go beyond their training data by connecting them to real, verified information sources. It’s a powerful way to build trustworthy AI — especially for legal or sensitive use cases where hallucinations can be dangerous.\n\n---\n\n## Next Steps\n\nIn the next phase, I’ll focus on:\n\n- Improving document retrieval accuracy  \n- Testing with different LLMs (GPT-4, Claude, Gemini)  \n- Adding citation tracking for better transparency  \n\nThis project has already taught me that combining **data science**, **natural language processing**, and **law** can create meaningful tools that help people in real life.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.25","theme":"cosmo","title-block-banner":true,"title":"Building a Legal AI Helper: My Senior Project Overview","description":"Introducing my senior project, Law AI Helper — an AI assistant for labor law information using RAG and LLMs.","author":"Shawn","date":"2025-10-04","categories":["project","overview"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}